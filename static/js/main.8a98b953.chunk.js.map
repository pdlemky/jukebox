{"version":3,"sources":["components/player/player.component.jsx","components/playlist-item/playlist-item.component.jsx","components/playlist/playlist.component.jsx","App.js","serviceWorker.js","index.js"],"names":["playlist","id","url","cover","title","artist","Player","className","mode","React","Component","PlaylistItem","alt","src","Playlist","state","this","map","otherPlaylistProps","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oVAKMA,G,MAAW,CACb,CACIC,GAAI,EACJC,IAAK,4CACLC,MAAO,qHACPC,MAAO,MACPC,OAAQ,CACN,cAGN,CACIJ,GAAI,EACJC,IAAK,kEACLC,MAAO,qHACPC,MAAO,4BACPC,OAAQ,CACJ,cAGR,CACIJ,GAAI,EACJC,IAAK,oDACLC,MAAO,qHACPC,MAAO,aACPC,OAAQ,CACJ,eAGR,CACIJ,GAAI,EACJC,IAAK,kDACLC,MAAO,qHACPC,MAAO,gBACPC,OAAQ,CACJ,UAGR,CACIJ,GAAI,EACJC,IAAK,8CACLC,MAAO,qHACPC,MAAO,OACPC,OAAQ,CACJ,iBAeGC,E,uKARP,OACI,yBAAKC,UAAU,UACX,kBAAC,IAAD,CAAaP,SAAUA,EAAUQ,KAAK,kB,GAJjCC,IAAMC,W,OCvCZC,G,YAVM,SAAC,GAAD,IAAER,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,OAAhB,OACjB,wBAAIE,UAAU,iBACV,yBAAKA,UAAU,uBAAsB,yBAAKK,IAAI,GAAGC,IAAKV,KACtD,yBAAKI,UAAU,yBACX,0BAAMA,UAAU,uBAAuBH,GACvC,0BAAMG,UAAU,wBAAwBF,OCgErCS,E,kDAnEX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTf,SAAU,CACN,CACIC,GAAI,EACJC,IAAK,4CACLC,MAAO,wFACPC,MAAO,MACPC,OAAQ,CACN,cAGN,CACIJ,GAAI,EACJC,IAAK,kEACLC,MAAO,wFACPC,MAAO,4BACPC,OAAQ,CACJ,cAGR,CACIJ,GAAI,EACJC,IAAK,oDACLC,MAAO,wFACPC,MAAO,aACPC,OAAQ,CACJ,eAGR,CACIJ,GAAI,EACJC,IAAK,kDACLC,MAAO,wFACPC,MAAO,gBACPC,OAAQ,CACJ,UAGR,CACIJ,GAAI,EACJC,IAAK,8CACLC,MAAO,wFACPC,MAAO,OACPC,OAAQ,CACJ,iBA/CN,E,qDAuDV,OACI,yBAAKE,UAAU,YACX,4BACKS,KAAKD,MAAMf,SAASiB,KAAI,gBAAEhB,EAAF,EAAEA,GAAOiB,EAAT,6BACrB,kBAAC,EAAD,eAAcC,IAAKlB,GAAQiB,a,GA5D5BT,IAAMC,WCUdU,MATf,WACE,OACE,yBAAKb,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEcc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8a98b953.chunk.js","sourcesContent":["import React from 'react';\nimport MusicPlayer from 'react-responsive-music-player';\n\nimport './player.styles.scss';\n\nconst playlist = [\n    {\n        id: 1,\n        url: 'https://www.last.fm/music/Lady+Gaga/_/911',\n        cover: 'https://lastfm.freetls.fastly.net/i/u/770x0/c10ddd30f511a41c1683ef5212e87992.webp#c10ddd30f511a41c1683ef5212e87992',\n        title: '911',\n        artist: [\n          'Lady Gaga'\n        ]\n    },\n    {\n        id: 2,\n        url: 'https://www.last.fm/music/Bad+Omens/_/Careful+What+You+Wish+For',\n        cover: 'https://lastfm.freetls.fastly.net/i/u/770x0/397deff0e78ebceb97b67b5cc55bfae9.webp#397deff0e78ebceb97b67b5cc55bfae9',\n        title: 'Careful What You Wish For',\n        artist: [\n            'Bad Omens'\n        ]\n    },\n    {\n        id: 3,\n        url: 'https://www.last.fm/music/The+Chicks/_/Gaslighter',\n        cover: 'https://lastfm.freetls.fastly.net/i/u/770x0/49e6300558608f6c2c6c773dd82e46ea.webp#49e6300558608f6c2c6c773dd82e46ea',\n        title: 'Gaslighter',\n        artist: [\n            'The Chicks'\n        ]\n    },\n    {\n        id: 4,\n        url: 'https://www.last.fm/music/Havok/_/Phantom+Force',\n        cover: 'https://lastfm.freetls.fastly.net/i/u/770x0/b627d1d934981b23482b3ba156756920.webp#b627d1d934981b23482b3ba156756920',\n        title: 'Phantom Force',\n        artist: [\n            'Havok'\n        ]\n    },\n    {\n        id: 5,\n        url: 'https://www.last.fm/music/Mac+Miller/_/2009',\n        cover: 'https://lastfm.freetls.fastly.net/i/u/770x0/f082f1074b9450b8a83781175df8df03.webp#f082f1074b9450b8a83781175df8df03',\n        title: '2009',\n        artist: [\n            'Mac Miller'\n        ]\n    }\n]\n\nclass Player extends React.Component {\n    render() {\n        return (\n            <div className='player'>\n                <MusicPlayer playlist={playlist} mode='vertical' />\n            </div>\n        )\n    }\n}\n\nexport default Player;","import React from 'react';\n\nimport './playlist-item.styles.scss';\n\nconst PlaylistItem = ({cover, title, artist}) => (\n    <li className='playlist-item'>\n        <div className='playlist-item-cover'><img alt='' src={cover} /></div>\n        <div className='playlist-item-details'>\n            <span className='playlist-item-title'>{title}</span>\n            <span className='playlist-item-artist'>{artist}</span>\n        </div>\n    </li>\n)\n\nexport default PlaylistItem;","import React from 'react';\n\nimport './playlist.styles.scss';\nimport PlaylistItem from '../playlist-item/playlist-item.component';\n\nclass Playlist extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            playlist: [\n                {\n                    id: 1,\n                    url: 'https://www.last.fm/music/Lady+Gaga/_/911',\n                    cover: 'https://lastfm.freetls.fastly.net/i/u/avatar70s/c10ddd30f511a41c1683ef5212e87992.webp',\n                    title: '911',\n                    artist: [\n                      'Lady Gaga'\n                    ]\n                },\n                {\n                    id: 2,\n                    url: 'https://www.last.fm/music/Bad+Omens/_/Careful+What+You+Wish+For',\n                    cover: 'https://lastfm.freetls.fastly.net/i/u/avatar70s/befacb539dc0dfe9213c2662a2a7c1a8.webp',\n                    title: 'Careful What You Wish For',\n                    artist: [\n                        'Bad Omens'\n                    ]\n                },\n                {\n                    id: 3,\n                    url: 'https://www.last.fm/music/The+Chicks/_/Gaslighter',\n                    cover: 'https://lastfm.freetls.fastly.net/i/u/avatar70s/106686fe9870faffbb61e9897626e68a.webp',\n                    title: 'Gaslighter',\n                    artist: [\n                        'The Chicks'\n                    ]\n                },\n                {\n                    id: 4,\n                    url: 'https://www.last.fm/music/Havok/_/Phantom+Force',\n                    cover: 'https://lastfm.freetls.fastly.net/i/u/avatar70s/ff48f4f203dd26dfd029f73aad126314.webp',\n                    title: 'Phantom Force',\n                    artist: [\n                        'Havok'\n                    ]\n                },\n                {\n                    id: 5,\n                    url: 'https://www.last.fm/music/Mac+Miller/_/2009',\n                    cover: 'https://lastfm.freetls.fastly.net/i/u/avatar70s/f082f1074b9450b8a83781175df8df03.webp',\n                    title: '2009',\n                    artist: [\n                        'Mac Miller'\n                    ]\n                }\n            ]\n        }\n    }\n\n    render () {\n        return (\n            <div className='playlist'>\n                <ul>\n                    {this.state.playlist.map(({id, ...otherPlaylistProps}) => (\n                        <PlaylistItem key={id} {...otherPlaylistProps} />\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Playlist;","import React from 'react';\nimport './App.css';\n\nimport Player from './components/player/player.component';\nimport Playlist from './components/playlist/playlist.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Player />\n      <Playlist />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}